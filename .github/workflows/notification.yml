name: SLC Test

on:
  workflow_call:
    secrets:
      MS_TEAMS_WEBHOOK_URI:
        required: true
  pull_request:
    paths:
      - '.github/workflows/slc-test.yml'
      - 'slc/**'
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref'
        required: true
        default: 'develop'

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          coverage: none
          tools: parallel-lint, phpcs, cs2pr
      - name: Lint PHP code
        run:  parallel-lint --checkstyle ./slc | cs2pr
      - name: Detect coding standard violations
        continue-on-error: true
        run: phpcs --standard=slc/phpcs.xml.dist -p --basepath=. --report-full --report-checkstyle=./phpcs-report-slc.xml
      - name: Show PHPCS results in PR
        run: cs2pr --graceful-warnings ./phpcs-report-slc.xml
      - name: Install dependencies
        run: composer install
        working-directory: ./slc
      - name: Run Psalm
        run: ./slc/vendor/bin/psalm --config=slc/psalm.xml --output-format=github ./slc/src/
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and cache test image
        uses: docker/build-push-action@v2
        with:
          context: ./slc
          target: appdev
          push: false
          load: true
          tags: sunteck/slc:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run Tests
        run: |
          docker-compose -f slc/docker-compose.ci.yml up -d db
          docker-compose -f slc/docker-compose.ci.yml run --rm slc ./bin/wait-for-it.sh db:5432 -- ./bin/console doctrine:migrations:migrate -v --no-interaction
          docker-compose -f slc/docker-compose.ci.yml run --rm slc ./bin/wait-for-it.sh db:5432 -- ./bin/console doctrine:fixtures:load --no-interaction
          docker-compose -f slc/docker-compose.ci.yml run --rm slc ./bin/wait-for-it.sh db:5432 -- ./bin/phpunit
          docker-compose -f slc/docker-compose.ci.yml down

  notify-team-start:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Team Notify Start
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'SLC (${{ github.ref }}) QA/Tests: Started...'
          color: 'info'

  notify-team-success:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [static-analysis, test]
    runs-on: ubuntu-latest
    steps:
      - name: Team Notify of Success
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'SLC (${{ github.ref }}) QA/Tests: Success :white_check_mark:'
          color: 'success'

  notify-team-failure:
    if: ${{ failure() && github.event_name != 'pull_request' }}
    needs: [static-analysis, test]
    runs-on: ubuntu-latest
    steps:
      - name: Team Notify of Failure
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'SLC (${{ github.ref }}) QA/Tests: Failure :o:'
          color: 'failure'
