name: BTMS Test

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      MS_TEAMS_WEBHOOK_URI:
        required: true
  pull_request:
    paths:
      - '.github/workflows/btms-test.yml'
      - 'btms/**'
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref'
        required: true
        default: 'develop'

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none
          tools: composer, cs2pr, parallel-lint
      - name: Lint PHP code
        run:  parallel-lint --exclude ./btms/php/src/vendor --checkstyle ./btms/php/src | cs2pr
      - name: Detect coding standard violations
        run: |
          URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
          FILES_CHANGED=$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $URL | jq -r 'map(select(.status == "added" or .status == "modified")) | .[] | select(.filename|test("btms/")) | .filename' | xargs)
          echo "BTMS files added or modified: "
          echo $FILES_CHANGED
          if [ ${#FILES_CHANGED} -le "0" ]
          then
              echo "No added/modified files to check"
              exit 0
          fi
          ./btms/php/src/bin/phpcs --config-set ignore_errors_on_exit 1
          ./btms/php/src/bin/phpcs --config-set ignore_warnings_on_exit 1
          ./btms/php/src/bin/phpcs \
            -v \
            --standard=btms/php/src/phpcs.xml.dist \
            --basepath=. \
            --report-full \
            --report-checkstyle=./phpcs-report.xml \
            $FILES_CHANGED
          cs2pr --graceful-warnings ./phpcs-report.xml
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./btms/php
    env:
      SERVER_ENV: test
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Merge target branch
        run: |
          git config --global user.email "${GITHUB_ACTOR}"
          git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"
          git checkout $GITHUB_BASE_REF
          git checkout $GITHUB_HEAD_REF
          git merge $GITHUB_BASE_REF --no-edit
          git status
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none
      - name: Run unit tests
        run: ./src/bin/phpunit --verbose --testsuite Unit --no-coverage -c ./src/phpunit.xml.dist
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Copy test environment config from S3
        working-directory: ./
        run: aws s3 cp s3://sunteck-mono/etc/btms.test.env ./build/etc/
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Setup test database
        run: docker-compose -f docker-compose.test.yml up -d db
      - name: Run migrations
        run: docker-compose -f docker-compose.test.yml run --rm app ./bin/wait-for-it --timeout=60 db:3306 -- ./bin/phinx migrate
      - name: Seed test database
        run: docker-compose -f docker-compose.test.yml run --rm app ./bin/wait-for-it db:3306 -- ./bin/phinx seed:run
      - name: Run integration tests
        run: docker-compose -f docker-compose.test.yml run -e XDEBUG_MODE=off --rm app ./vendor/bin/phpunit --testsuite Integration --no-coverage

  notify-team-start:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Team Notify Start
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'BTMS (${{ github.ref }}) QA/Tests: Started...'
          color: 'info'

  notify-team-success:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [static-analysis, test]
    runs-on: ubuntu-latest
    steps:
      - name: Team Notify of Success
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'BTMS (${{ github.ref }}) QA/Tests: Success :white_check_mark:'
          color: 'success'

  notify-team-failure:
    if: ${{ failure() && github.event_name != 'pull_request' }}
    needs: [static-analysis, test]
    runs-on: ubuntu-latest
    steps:
      - name: Team Notify of Failure
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'BTMS (${{ github.ref }}) QA/Tests: Failure :o:'
          color: 'failure'
